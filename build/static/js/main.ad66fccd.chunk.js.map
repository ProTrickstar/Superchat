{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","className","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","placeholder","value","onChange","target","type","props","messageClass","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAWAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAqB3B,SAASC,IAKP,OACE,wBAAQC,QALe,WACvB,IAAMC,EAAW,IAAIZ,IAASQ,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAGrB,iCAIJ,SAASG,IACP,OAAOP,EAAKQ,aACV,wBAAQC,UAAU,WAAWN,QAAS,kBAAMH,EAAKU,WAAjD,sBAIJ,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAAP,oBACA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEQ5B,EAAKQ,YAAvBqB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAIZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAWzC,IAASS,UAAUiC,WAAWC,kBACzCN,MACAC,aARgB,OAWlBN,EAAa,IAEbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OACE,qCACA,iCACCjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAG,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACtD,qBAAKC,IAAKhC,OAEZ,uBAAMiC,SAAUpB,EAAhB,UACE,uBAAOqB,YAAY,qBAAoBC,MAAOxB,EAAWyB,SAAU,SAACtB,GAAD,OAAOF,EAAaE,EAAEuB,OAAOF,UAEhG,wBAAQG,KAAK,SAAb,sCAOJ,SAAST,EAAYU,GACrB,MAA6BA,EAAMT,QAA5BV,EAAP,EAAOA,KAAKH,EAAZ,EAAYA,IAAKC,EAAjB,EAAiBA,SACXsB,EAAevB,IAAQ7B,EAAKQ,YAAYqB,IAAM,OAAS,WAC3D,OACE,sBAAKpB,UAAS,kBAAa2C,GAA3B,UACE,qBAAKC,IAAKvB,IACV,4BAAIE,OAKKsB,MArFf,WAEA,MAAeC,YAAavD,GAArBwD,EAAP,oBAEE,OACE,sBAAK/C,UAAU,MAAf,UACE,mCACA,gEACA,cAACF,EAAD,OAGA,yBAASE,UAAU,WAAnB,SACG+C,EAAO,cAAC7C,EAAD,IAAe,cAACT,EAAD,UCxBhBuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad66fccd.chunk.js","sourcesContent":["import React, {useRef, useState,} from 'react'\nimport './App.css';\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAglej5ssYduVVzB9FLGaeL9V0qQMh9CNU\",\n  authDomain: \"chat-app-2bf35.firebaseapp.com\",\n  projectId: \"chat-app-2bf35\",\n  storageBucket: \"chat-app-2bf35.appspot.com\",\n  messagingSenderId: \"452808160231\",\n  appId: \"1:452808160231:web:4ea54c2dccdc2168308342\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\nconst [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Firebase Chat App üî•</h1>\n      <SignOut />\n      </header>\n\n      <section className=\"App-main\">\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn(){\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return (\n    <button onClick={signInWithGoogle}>Sign In With Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef()\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  return (\n    <>\n    <main>\n    {messages && messages.map(msg =><ChatMessage key={msg.id} message={msg} />)}\n    <div ref={dummy}></div>\n    </main>\n  <form onSubmit={sendMessage}>\n    <input placeholder=\"Say something nice\"value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n\n    <button type=\"submit\">üïäÔ∏è</button>\n    </form>\n\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\nconst {text,uid, photoURL} = props.message;\nconst messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}